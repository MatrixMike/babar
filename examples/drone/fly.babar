speak-config true.

import "clj-drone.core".
import "clj-drone.navdata".

(drone-initialize).

assert navdata (get-nav-data :default).
assert drone-navdata [key] get @navdata key.
assert navdata-equal [key val] = (drone-navdata key) val.
assert navdata-gt [key val] > (drone-navdata key) val.


convince #landed "I am on the ground" fn [] (navdata-equal :control-state :landed).
convince #flying "I am flying" fn [] or (navdata-equal :control-state :flying)
                                        (navdata-equal :control-state :hovering).
convince #high-enough "I am high enough" fn [] (navdata-gt :altitude 1.5).

request *take-off when #landed fn [] (drone :take-off).
request *cruising-alt when #flying until #high-enough fn [] (drone :up 0.1).
request *land when #high-enough fn [] (drone :land).

convince #done "Whee! I am done." fn [] and (navdata-equal :control-state :landed)
                                            query request-is-done *land.
request *end-navstream when #done fn [] (end-navstream).

(drone-init-navdata).
